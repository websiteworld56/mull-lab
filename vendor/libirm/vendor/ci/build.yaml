- name: Build libirm and run tests
  hosts: "localhost"

  vars_files:
    - variables.yaml

  tasks:
    - name: Create Build Directory (Debug)
      file:
        path: "{{ debug_build_dir }}"
        state: directory

    - name: Prepare Build System (Debug)
      command: cmake -DPATH_TO_LLVM={{ llvm_dir }} -DCMAKE_CXX_FLAGS="{{ cxx_flags }}" {{ source_dir }}
      args:
        chdir: "{{ debug_build_dir }}"
        creates: "{{ debug_build_dir }}/CMakeCache.txt"
      environment:
        CC: "{{ llvm_dir }}/bin/clang"
        CXX: "{{ llvm_dir }}/bin/clang++"

    - name: Build libirm (Debug)
      command: make all irm-tests -j {{ ansible_processor_vcpus }}
      args:
        chdir: "{{ debug_build_dir }}"

    - name: Run Tests (Debug)
      command: "tests/irm-tests"
      args:
        chdir: "{{ debug_build_dir }}"

    - name: Merge code coverage (Debug)
      command: "{{ llvm_dir }}/bin/llvm-profdata merge default.profraw -o default.profdata"
      args:
        chdir: "{{ debug_build_dir }}"

    - name: Export code coverage (Debug)
      shell: "{{ llvm_dir }}/bin/llvm-cov export --format=lcov --instr-profile=default.profdata tests/irm-tests > coverage.lcov"
      args:
        chdir: "{{ debug_build_dir }}"

    - name: Copy code coverage (Debug)
      command: mv {{ debug_build_dir }}/coverage.lcov /opt/debug-coverage.lcov

    - name: Create Build Directory (Release)
      file:
        path: "{{ release_build_dir }}"
        state: directory

    - name: Prepare Build System (Release)
      command: cmake -DPATH_TO_LLVM={{ llvm_dir }} -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="{{ cxx_flags }}" {{ source_dir }}
      args:
        chdir: "{{ release_build_dir }}"
        creates: "{{ release_build_dir }}/CMakeCache.txt"
      environment:
        CC: "{{ llvm_dir }}/bin/clang"
        CXX: "{{ llvm_dir }}/bin/clang++"

    - name: Build libirm (Release)
      command: make all irm-tests -j {{ ansible_processor_vcpus }}
      args:
        chdir: "{{ release_build_dir }}"

    - name: Run Tests (Release)
      command: "{{ release_build_dir}}/tests/irm-tests"
      args:
        chdir: "{{ release_build_dir }}"

    - name: Merge code coverage (Release)
      command: "{{ llvm_dir }}/bin/llvm-profdata merge default.profraw -o default.profdata"
      args:
        chdir: "{{ release_build_dir }}"

    - name: Export code coverage (Release)
      shell: "{{ llvm_dir }}/bin/llvm-cov export --format=lcov --instr-profile=default.profdata tests/irm-tests > coverage.lcov"
      args:
        chdir: "{{ release_build_dir }}"

    - name: Copy code coverage (Release)
      command: mv {{ release_build_dir }}/coverage.lcov /opt/release-coverage.lcov
